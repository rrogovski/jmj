(function () {
    'use strict';

    angular.module('main').config(configFn);

    /**
     * @ngInject
     * @type {string[]}
     */
    configFn.$inject = ['$stateProvider'];

    /**
     * Config
     *
     * @param $stateProvider
     */
    function configFn($stateProvider) {
        $stateProvider.state('app.empresas', {
            url: '/empresas',
            views: {
                'content@app': {
                    templateUrl: 'app/pages/cadastro/empresa/empresas.html',
                    controller: ControllerFn,
                    controllerAs: 'vmEmpresas'
                }
            }
        });
    }

    ControllerFn.$inject = [
        '$location',
        '$http',
        '$state',
        '$scope',
        '$stateParams',
        '$compile',
        '$q',
        'DTOptionsBuilder',
        'DTColumnBuilder'
    ];

    /**
     * Controller Function
     *
     * @constructor
     * @param EmpresaService
     * @param $location
     * @param $http
     * @param DTOptionsBuilder
     * @param DTColumnBuilder
     */
    function ControllerFn($location, $http, $state, $compile, $q, DTOptionsBuilder, DTColumnBuilder) {
        var vm = this;

        vm.state = $state;
        // vm.scope = $scope;
        // console.log($scope);
        // console.log(this.state);
        // console.log(vm.$scope);
        // vm.state = $state;
        // console.log($scope);
        // console.log($state);

        $http.get("http://localhost:3333/empresa/")
        .then( function (res) {
            console.log(res);
            vm.empresas = res.data.empresas;
        }).catch( function (err) {
            console.log(err);
        })

        // $http.get("http://localhost:3333/empresa/")
        // .success( function (empresas) {
        //     // console.log(empresas);
        //     vm.empresas = empresas;
        // })
        // .error( function (err) {
        //     console.log(err);
        // });

        vm.delete = function (empresa) {
            // var $state = vm.state;
            console.log(empresa);

            swal({
                title: 'Tem certeza que deseja excluir?',
                text: 'Excluir: '+ empresa.razaoSocial +'\nNão será possível recuperar essa informação!',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Sim, excluir!',
                closeOnConfirm: false,
                showLoaderOnConfirm: true,
                html: false
            }, function () {
                $http.delete('http://localhost:3333/empresa/'+ empresa.id)
                .then(function (res) {
                    console.log(res);
                    swal({
                        title: 'Excluído!',
                        text: res.data.empresa.razaoSocial + ', excluída!',
                        type: 'success',
                        confirmButtonText: 'OK',
                        closeOnConfirm: true
                    }, function () {
                        vm.state.reload();
                        // vm.state.go(vm.state.current, {}, {reload: true});
                        // $state.transitionTo($state.current, $stateParams, { 
                        //     reload: true, inherit: false, notify: false 
                        // });
                    })
                })
            })
        }

        // vm.persons = $resource('data1.json').query();
        // vm.persons = vm.empresas;
        // vm.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers');
        // vm.dtColumnDefs = [
        //     DTColumnDefBuilder.newColumnDef(0),
        //     DTColumnDefBuilder.newColumnDef(1),
        //     DTColumnDefBuilder.newColumnDef(2),
        //     DTColumnDefBuilder.newColumnDef(3).notSortable()
        // ];
        // vm.person2Add = _buildPerson2Add(1);
        // vm.addPerson = addPerson;
        // vm.modifyPerson = modifyPerson;
        // vm.removePerson = removePerson;

        // function _buildPerson2Add(id) {
        //     return {
        //         id: id,
        //         firstName: 'Foo' + id,
        //         lastName: 'Bar' + id
        //     };
        // }
        // function addPerson() {
        //     vm.persons.push(angular.copy(vm.person2Add));
        //     vm.person2Add = _buildPerson2Add(vm.person2Add.id + 1);
        // }
        // function modifyPerson(index) {
        //     vm.persons.splice(index, 1, angular.copy(vm.person2Add));
        //     vm.person2Add = _buildPerson2Add(vm.person2Add.id + 1);
        // }
        // function removePerson(index) {
        //     vm.persons.splice(index, 1);
        // }

        $(document).ready(function () {
            $('#empresas').DataTable({
                'paging'      : true,
                'lengthChange': false,
                'searching'   : false,
                'ordering'    : true,
                'info'        : true,
                'autoWidth'   : false,
                'language': { 
                    'emptyTable': "Sem dados disponíveis",
                    'loadingRecords': "Please wait .. ",
                    'zeroRecords': "No matching records found",
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "_MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            })
        });  
        
        // vm.dtOptions = DTOptionsBuilder.fromSource(function() {
        //     var defer = $q.defer();
        //     $http.get('http://localhost:3333/empresa/').then(function(result) {
        //         defer.resolve(result.data);
        //     });
        //     return defer.promise;
        // }).withPaginationType('full_numbers');
    
        // vm.dtColumns = [
        //     DTColumnBuilder.newColumn('id').withTitle('ID'),
        //     // DTColumnBuilder.newColumn('firstName').withTitle('First name'),
        //     // DTColumnBuilder.newColumn('lastName').withTitle('Last name').notVisible()
        // ];

        // $http.get('http://localhost:3333/empresa/').success(function(data, status, headers, config){
        //     console.log(data);
        //     vm.empresas = data.empresas;
        // });

        // $http.get("http://localhost:3333/empresa/")
        // .then( function (res) {
        //     console.log(res);
        //     vm.empresas = res.data.empresas;
        // }).catch( function (err) {
        //     console.log(err);
        // })

        // vm.message = '';
        // vm.edit = edit;
        // vm.delete = deleteRow;
        // vm.dtInstance = {};
        // vm.empresas = {};
        // vm.dtOptions = DTOptionsBuilder.fromSource()
        //     .withPaginationType('full_numbers')
        //     .withOption('createdRow', createdRow);
        // vm.dtColumns = [
        //     DTColumnBuilder.newColumn('id').withTitle('ID'),
        //     // DTColumnBuilder.newColumn('firstName').withTitle('First name'),
        //     // DTColumnBuilder.newColumn('lastName').withTitle('Last name'),
        //     DTColumnBuilder.newColumn(null).withTitle('Actions').notSortable()
        //         .renderWith(actionsHtml)
        // ];

        // function edit(empresa) {
        //     vm.message = 'You are trying to edit the row: ' + JSON.stringify(empresa);
        //     // Edit some data and call server to make changes...
        //     // Then reload the data so that DT is refreshed
        //     vm.dtInstance.reloadData();
        // }
        // function deleteRow(empresa) {
        //     vm.message = 'You are trying to remove the row: ' + JSON.stringify(empresa);
        //     // Delete some data and call server to make changes...
        //     // Then reload the data so that DT is refreshed
        //     vm.dtInstance.reloadData();
        // }
        // function createdRow(row, data, dataIndex) {
        //     // Recompiling so we can bind Angular directive to the DT
        //     $compile(angular.element(row).contents())($scope);
        // }
        // function actionsHtml(data, type, full, meta) {
        //     vm.empresas[data.id] = data;
        //     return '<button class="btn btn-warning" ng-click="vmEmpresas.edit(vmEmpresas.empresas[' + data.id + '])">' +
        //         '   <i class="fa fa-edit"></i>' +
        //         '</button>&nbsp;' +
        //         '<button class="btn btn-danger" ng-click="vmEmpresas.delete(vmEmpresas.persons[' + data.id + '])" )"="">' +
        //         '   <i class="fa fa-trash-o"></i>' +
        //         '</button>';
        // }
    }
})();
